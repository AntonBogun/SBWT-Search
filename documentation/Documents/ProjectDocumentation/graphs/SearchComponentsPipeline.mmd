flowchart TD
    StringSequenceBatch(["
    StringSequenceBatch
        <i>
        seq (max_characters * 8 bits)

        </i>
    "])
    InvalidCharsBatch(["
        InvalidCharsBatch
        <i>
        invalid_chars (max_characters * 8 bits)

        </i>
    "])
    PositionsBatch(["
        PositionsBatch
        <i>
        positions (max_characters * 64 bits)

        </i>
    "])
    IntervalBatch(["
        IntervalBatch
        <i>
        chars_before_newline (scales as necessary - linearly proportional to chars_before_newline)
        newlines_before_newfile (scales as necessary - linearly proportional to chars_before_newline)

        </i>
    "])
    ResultsBatch(["
        ResultsBatch
        <i>
        results (max_characters * 64)

        </i>
    "])
    StringBreakBatch(["
        CumulativePropertiesBatch
        <i>
        chars_before_newline (shared with IntervalBatch:chars_before_newline)
        string_size (64 bits)

        </i>
    "])
    BitSeqBatch(["
        BitSeqBatch
        <i>
        bit_seq (max_characters * 2 bits)

        </i>
    "])

    FASTA{FASTA}-->ContinuousSequenceFileParser
    subgraph ContinuousSequenceFileParser
        StringSequenceBatchProducer
        StringBreakBatchProducer
        IntervalBatchProducer
    end

    subgraph ContinuousSeqToBitsConverter
        InvalidCharsProducer
        BitsProducer
    end

    StringSequenceBatchProducer --- StringSequenceBatch
    StringBreakBatchProducer --- StringBreakBatch
    IntervalBatchProducer --- IntervalBatch
    InvalidCharsProducer --- InvalidCharsBatch
    BitsProducer --- BitSeqBatch
    ContinuousPositionsBuilder --- PositionsBatch
    ContinuousSearcher --- ResultsBatch

    StringSequenceBatch-->ContinuousSeqToBitsConverter
    StringBreakBatch-->ContinuousPositionsBuilder
    IntervalBatch --> ContinuousResultsPrinter
    InvalidCharsBatch --> ContinuousResultsPrinter
    BitSeqBatch --> ContinuousSearcher
    PositionsBatch --> ContinuousSearcher
    ResultsBatch --> ContinuousResultsPrinter

    ContinuousResultsPrinter--> ResultFiles{Results}
